AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Bitcoin price guessing game backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Runtime: nodejs18.x
    Architectures:
      - arm64

Resources:
  # Players
  PlayersApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: dist/playersApi
      Handler: handlers/playersApi.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PlayersTable
      Events:
        PlayersApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/players/{proxy+}
            Method: ANY

  PlayersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: players
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # Prices
  PricesApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: dist/pricesApi
      Handler: handlers/pricesApi.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PricesTable
      Events:
        PricesApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/prices
            Method: ANY

  UpdateBtcPriceFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 20
      CodeUri: dist/btcPriceUpdate
      Handler: handlers/btcPriceUpdate.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PricesTable
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:btcApiKey-??????"
      Events:
        UpdateBtcPrice:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)

  PricesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: prices
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  # Guesses
  GuessesApiFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Timeout: 15
      CodeUri: dist/guessesApi
      Handler: handlers/guessesApi.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GuessesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PricesTable
      Events:
        GuessesApiRoot:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: "/v1/guesses"
            Method: ANY
        GuessesApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /v1/guesses/{proxy+}
            Method: ANY

  GuessesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: guesses
      AttributeDefinitions:
        - AttributeName: playerId
          AttributeType: S
      KeySchema:
        - AttributeName: playerId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ResolveGuessesFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      Timeout: 60
      CodeUri: dist/resolveGuesses
      Handler: handlers/resolveGuesses.handler
      Description: A Lambda function that resolves guesses after price changes
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PricesTable.StreamArn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref GuessesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref PlayersTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiBaseUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
